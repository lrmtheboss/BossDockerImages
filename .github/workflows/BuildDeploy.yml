name: build deploy
on:
  workflow_call:
    inputs:
      tags:
        required: true
        type: string
        description: "The tags to build"
      image_name:
        required: true
        type: string
        description: "The image name to build"
      folder:
        required: true
        type: string
        description: "The folder to build"

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.setVariables.outputs.matrix }}
    steps:
      - id: setVariables
        run: |
          echo "::set-output name=matrix::$input"
        env:
          input: ${{ inputs.tags }}
  push:
    name: "bossdockerimages:${{ inputs.image_name }}_${{ matrix.tag }}"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        tag: ${{fromJson(needs.setup.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v4
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3
        with:
          cosign-release: 'v2.2.3'
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: type=sha,format=long
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: ./${{ inputs.folder }}
          file: ./${{ inputs.folder }}/${{ matrix.tag }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/lrmtheboss/bossdockerimages:${{ inputs.image_name }}_${{ matrix.tag }}
      - name: Sign the images with GitHub OIDC Token
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
          TAGS: ${{ steps.meta.outputs.tags }}
        run: cosign sign --yes "${TAGS}@${DIGEST}"